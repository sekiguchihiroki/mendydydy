@startuml

Main --> ユーザーインタフェース層
ユーザーインタフェース層 --> アプリケーション層
アプリケーション層 --> レポジトリー層
アプリケーション層 --> ドメイン層
ユーザーインタフェース層 --> ドメイン層

class Main {
  void 勤怠管理(String[] args)
  boolean is勤怠入力(){return args[0].equals("input")}
  boolean is集計(){return args[0].equals("total")}
}

package ユーザーインタフェース層 <<Folder>> {
 勤怠入力API -->  勤怠入力リクエスト

class 勤怠入力API {
  -private 勤怠入力リクエスト
  void 勤怠入力(勤怠入力リクエスト)
 }
class 勤怠入力リクエスト {
  -private string arg1
  -private string arg2
  -private string arg3
  +勤怠日毎データエンティティ create()
 }

}


package アプリケーション層 <<Folder>> {
class 勤怠入力サービス {
  -勤怠レポジトリー
  void 勤怠入力(勤怠入力){ 勤怠レポジトリー.登録(勤怠入力)}

 }

}

package ドメイン層 <<Folder>> {
勤怠日毎データエンティテイ *-- 勤務日付
勤怠日毎データエンティテイ *-- 開始時間
勤怠日毎データエンティテイ *-- 終了時間

class 勤怠日毎データエンティテイ {
  -勤怠日付
  -開始時間
  -終了時間
}

class 勤務日付 {
  -dateTime
 }

class 開始時間 {
  -dateTime
 }

class 終了時間 {
  -dateTime
 }

}

package レポジトリー層 <<Folder>> {
interface 勤怠レポジトリー
勤怠レポジトリー : void 登録(勤怠入力)

}

@enduml