@startuml

Main --|> ユーザーインタフェース層
ユーザーインタフェース層 --|> アプリケーション層
アプリケーション層 --|> レポジトリー層
アプリケーション層 --|> ドメイン層

class Main {
  void 勤怠管理(String[] args)
  boolean is勤怠入力(){return args[0].equals("input")}
  boolean is集計(){return args[0].equals("total")}
}

package ユーザーインタフェース層 <<Folder>> {
 勤怠入力API -->  勤怠入力リクエスト

class 勤怠入力API {
  -private 勤怠入力リクエスト
  void 勤怠入力(勤怠入力リクエスト)
 }
class 勤怠入力リクエスト {
  -private string arg1
  -private string arg2
  -private string arg3
  +勤怠入力 create()
 }
 class 勤怠集計API {
   -private 勤怠集計サービス
   List 勤怠集計()
  }

}


package アプリケーション層 <<Folder>> {
class 勤怠入力サービス {
  -勤怠レポジトリー
  void 勤怠入力(勤怠入力){ 勤怠レポジトリー.登録(勤怠入力)}

 }

}

package ドメイン層 <<Folder>> {
勤怠入力 *-- 勤務日付
勤怠入力 *-- 開始時刻
勤怠入力 *-- 終了時刻
勤怠リスト --|> 勤務時間
勤怠リスト --|> 残業時間

class 勤怠入力 {
  -勤怠入力
  -開始時刻
  -終了時刻

}
class 勤怠リスト {
  -List<勤怠入力>
  +勤怠集計結果 勤怠集計して(List<勤怠入力>)
  +List<勤怠入力> 遅刻即クビフィルター(this.List<勤怠入力>)
  +勤務時間 一ヶ月分勤務時間集計(List<勤怠入力>)
  +残業時間 一ヶ月分残業時間集計(List<勤怠入力>)


}
class 勤務日付 {
  -dateTime
 }

class 開始時刻 {
  -dateTime
 }

class 終了時刻 {
  -dateTime
 }

class 勤務時間{
  -dateTime
  勤務時間 一ヶ月分勤務時間集計(List<勤怠入力>)
 }
class 残業時間{
  -dateTime
  残業時間 一ヶ月分残業時間集計(List<勤怠入力>)
 }
}

package レポジトリー層 <<Folder>> {
interface 勤怠レポジトリー
勤怠レポジトリー : void 登録(勤怠入力)
勤怠レポジトリー : List １ヶ月分集計(勤怠月)

}

@enduml